setwd("D:/github/2017_data_course/project/data/exchange_ex")
library(ggplot2)
library(plotly)
require(stats)
rawdata <- read.csv("exchange_students.csv",header = TRUE,encoding = "UTF-8", sep=",")
yearLength <- length(rawdata$year)
firstyear <- rawdata$year[1]
lastyear <- rawdata$year[yearLength]
n <- lastyear - firstyear +1
alltype <- colnames(rawdata)
CollegeId <- c(3:13)
newTable <- data.frame()
for (i in 2:n)
{
year <- as.matrix(rep(rawdata$year[i],length(rawdata[i,CollegeId])))
people = as.matrix(as.numeric(rawdata[i,CollegeId]))
type = as.matrix(as.character(alltype[CollegeId]))
temp = cbind(year, type, people)
newTable = rbind(newTable, temp)
}
names(newTable) = c('year', 'College', 'people')
newTable = newTable[with(newTable, order(College)),]
rownames(newTable) <- 1:nrow(newTable)
p <- plot_ly(data = newTable[,1:3], x = ~year,
y = ~people, color = ~College, main="甇瑕僑??鈭斗??犖?") %>%
add_lines( yaxis = list(range = c(0,10)))
p
htmlwidgets::saveWidget(p, "index.html")
save(rawdata, newTable, file = "newTable.RData")
View(newTable)
library("dplyr")
library("plotly")
raw_data<- read.csv("D:/github/2017_data_course/HW/HW2/hw2.csv", sep= ",", header= TRUE)
del_na<- which(is.na(raw_data$year)== TRUE)
raw_data<- raw_data[-del_na, ]
raw_data[is.na(raw_data)]<- 0
p <- plot_ly(raw_data, x = ~year, y = ~prof, name = 'Prof.', type = 'scatter', mode = 'lines')
chart<- plotly_POST(p, filename="line/mode1")
library("dplyr")
library("plotly")
library("RColorBrewer")
raw_data<- read.csv("D:/github/2017_data_course/project/eng_class.csv", sep= ",", header= TRUE)
lastsemId = length(raw_data$semester)
firstsem = raw_data$semester[1]
lastsem = raw_data$semester[lastsemId]
n = 18
allType = names(raw_data)
rownames(raw_data) <- 1:nrow(raw_data)
typeId = c(2:13)
newTable = data.frame()
for( nid in c(1:n) )
{
semester = as.matrix(rep(raw_data$semester[nid], length(raw_data[nid,typeId])))
class_num = as.matrix(as.numeric(raw_data[nid,typeId]))
type = as.matrix(as.character(allType[typeId]))
temp = cbind(semester, class_num, type)
newTable = rbind(newTable, temp)
}
names(newTable) = c('semester', 'class_num', 'pos')
newTable = newTable[with(newTable, order(pos)),]
rownames(newTable) <- 1:nrow(newTable)
colourCount = length(unique(mtcars$hp))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
p <- plot_ly(data = newTable, x = ~semester,
y = ~class_num, color = ~pos, colors= getPalette(colourCount)) %>%
add_lines( yaxis = list(range = c(0,10)))
p
htmlwidgets::saveWidget(p, "index.html")
raw_data<- read.csv("D:/github/2017_data_course/project/eng_class.csv", sep= ",", header= TRUE)
setwd("D:/github/2017_data_course/HW/HW2")
raw_data<- read.csv("eng_class.csv", sep= ",", header= TRUE)
lastsemId = length(raw_data$semester)
firstsem = raw_data$semester[1]
lastsem = raw_data$semester[lastsemId]
n = 18
allType = names(raw_data)
rownames(raw_data) <- 1:nrow(raw_data)
typeId = c(2:13)
newTable = data.frame()
for( nid in c(1:n) )
{
semester = as.matrix(rep(raw_data$semester[nid], length(raw_data[nid,typeId])))
class_num = as.matrix(as.numeric(raw_data[nid,typeId]))
type = as.matrix(as.character(allType[typeId]))
temp = cbind(semester, class_num, type)
newTable = rbind(newTable, temp)
}
names(newTable) = c('semester', 'class_num', 'pos')
newTable = newTable[with(newTable, order(pos)),]
rownames(newTable) <- 1:nrow(newTable)
colourCount = length(unique(mtcars$hp))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
p <- plot_ly(data = newTable, x = ~semester,
y = ~class_num, color = ~pos, colors= getPalette(colourCount)) %>%
add_lines( yaxis = list(range = c(0,10)))
p
htmlwidgets::saveWidget(p, "index.html")
library("dplyr")
library("plotly")
library("RColorBrewer")
raw_data<- read.csv("eng_class.csv", sep= ",", header= TRUE)
lastsemId = length(raw_data$semester)
firstsem = raw_data$semester[1]
lastsem = raw_data$semester[lastsemId]
n = 18
allType = names(raw_data)
rownames(raw_data) <- 1:nrow(raw_data)
typeId = c(2:13)
newTable = data.frame()
for( nid in c(1:n) )
{
semester = as.matrix(rep(raw_data$semester[nid], length(raw_data[nid,typeId])))
class_num = as.matrix(as.numeric(raw_data[nid,typeId]))
type = as.matrix(as.character(allType[typeId]))
temp = cbind(semester, class_num, type)
newTable = rbind(newTable, temp)
}
names(newTable) = c('semester', 'class_num', 'pos')
newTable = newTable[with(newTable, order(pos)),]
rownames(newTable) <- 1:nrow(newTable)
colourCount = length(unique(mtcars$hp))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
p <- plot_ly(data = newTable, x = ~semester,
y = ~class_num, color = ~pos, colors= getPalette(colourCount)) %>%
add_lines( yaxis = list(range = c(0,10)))
p
htmlwidgets::saveWidget(p, "index.html")
View(newTable)
newTable<- newTable[-(199:216)]
View(newTable)
newTable<- newTable[-(199:216),]
View(newTable)
p <- plot_ly(data = newTable, x = ~semester,
y = ~class_num, color = ~pos, colors= getPalette(colourCount)) %>%
add_lines( yaxis = list(range = c(0,10)))
p
htmlwidgets::saveWidget(p, "index.html")
?replace
