select(year, mortgage_total_bal)
# 請填寫你的程式碼。
})
cl_info_year <- local({
select(cl_info, data_dt, mortgage_bal) %>%
mutate(month = substring(data_dt,1,7)) %>%
group_by(month) %>%
summarise(mortgage_total_bal = sum(mortgage_bal, na.rm = TRUE)) %>%
mutate(year = substring(month, 1, 4)) %>%
group_by(year) %>%
arrange(month) %>%
summarise(month = head(month, 1), mortgage_total_bal = head(mortgage_total_bal, 1)) %>%
select(year, mortgage_total_bal)
# 請填寫你的程式碼。
})
stopifnot(is.data.frame(cl_info_year))
stopifnot(colnames(cl_info_year) == c("year", "mortgage_total_bal"))
stopifnot(class(cl_info_year$year) == "character")
stopifnot(class(cl_info_year$mortgage_total_bal) == "numeric")
stopifnot(nrow(cl_info_year) == 9)
stopifnot(range(cl_info_year$year) == c("2006", "2014"))
stopifnot(range(cl_info_year$mortgage_total_bal) == c(3.79632e+12, 5.726784e+12))
answerHW <- local({
inner_join(cl_info_year, gdp, by= "year")%>%
mutate(index= mortgage_total_bal/ gdp)%>%
select(year, index)
# 請在這邊填寫你的程式碼。
})
stopifnot(is.data.frame(answerHW))
stopifnot(nrow(answerHW) == 8)
stopifnot(colnames(answerHW) == c("year", "index"))
stopifnot(class(answerHW$year) == "character")
stopifnot(class(answerHW$index) == "numeric")
stopifnot(min(answerHW$index) > 0.3)
stopifnot(max(answerHW$index) < 0.4)
submit()
bye()
q()
install.packages("tmcn")
install.packages("tmcn")
install.packages("NLP")
install.packages("tm")
install.packages("jiebaRD")
install.packages("RColorBrewer")
install.packages("wordcloud")
install.packages("rvest")
library(tmcn)
rm(list=ls(all.names = TRUE))
#library(rvest)
#install.packages("tmcn",
#repos="http://R-Forge.R-project.org")
URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
allText
write.table(allText, "mydata.txt")
install.packages("tmcn", repos="http://R-Forge.R-project.org")
install.package("jiebaR")
install.packages("jiebaR")
install.packages("tmcn", repos="http://R-Forge.R-project.org")
install.packages("tmcn", repos="http://R-Forge.R-project.org")
install.packages("C:/Users/whirl/Downloads/tmcn_0.1-4.zip", repos = NULL, type = "win.binary")
library(tmcn)
library(tmcn)
rm(list=ls(all.names = TRUE))
library(rvest)
#install.packages("tmcn",
#repos="http://R-Forge.R-project.org")
URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
allText
write.table(allText, "mydata.txt")
View(data)
?html_attr
html_attr(title, "href")
?toUTF8
?sapply
getContent(data$href[1])
URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_name(tag))
}
getContent(data$href[1])
x<- getContent(data$href[1])
x
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
getContent(data$href[1])
x<- getContent(data$href[1])
x
allText = sapply(data$href, getContent)
allText
write.table(allText, "mydata.txt")
attr(getContent(data$href[1]))
mode(getContent(data$href[1]))
allText_1<- strsplit(allText, "※ 發信站")
write.table(allText_1[1], "mydata.txt")
x<- write.table(allText_1[1], "mydata.txt")
allText_1
allText_1[1]
mode(allText_1)
allText_1[[1]]
allText_1[[1]][1]
allText_1[[1]][[1]
]
allText
allText_1<- strsplit(allText, "--")
allText_1
allText_1[, 1]
write.table(allText, "mydata.txt")
mydata.txt
View(getContent)
URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
allText_1<- strsplit(allText, "--")
write.table(allText, "mydata.txt")
title
URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
url<- paste0("https://www.ptt.cc", data$href[1])
html_text(read_html(url), 'div#main-content.bbs-screen.bbs-content')
data = data[-c(1:10),]
url<- paste0("https://www.ptt.cc", data$href[1])
html_text(read_html(url), 'div#main-content.bbs-screen.bbs-content')
html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
tag<- html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
toUTF8(html_text(tag))
allText_1<- strsplit(allText, "作者", "看板")
allText_1
regexpr(allText[1], "作者", "看板")
regexpr(allText[1], "作者")
regexpr(allText, "作者")
regexpr(allText[[1]], "作者")
?regexpr
source('pttTestFunction.R')
rm(list=ls(all.names = TRUE))
id<- c(1:10)
url_function<- function(x) {
URL   = paste0("https://www.ptt.cc/bbs/NTUcourse/index", 1994- x, ".html")
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
return(allText)
}
filename<- paste0(id, ".txt")
write.table(sapply(id, url_function), filename)
url_function(1)
url_function<- function(x)
URL   = paste0("https://www.ptt.cc/bbs/NTUcourse/index", 1994- x, ".html")
url_function<- function(x)paste0("https://www.ptt.cc/bbs/NTUcourse/index", 1994- x, ".html")
URL<- sapply(id, url_function)
html  = read_html(URL)
id<- c(1:10)
url_function<- function(x){
URL<- paste0("https://www.ptt.cc/bbs/NTUcourse/index", 1994- as.numeric(x), ".html")
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
}
sapply(id, url_function)
id<- c(1984:1993)
url_function<- function(x){
URL<- paste0("https://www.ptt.cc/bbs/NTUcourse/index",x, ".html")
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
}
url_function(1)
url_function(1993)
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/NTUcourse/index", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/NTUcourse/index", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
library(tmcn)
library(rvest)
pttTestFunction <- function(URL, filename)
{
#URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
allText
#out <- file(filename, "w", encoding="BIG-5")
write.table(allText, filename)
#close(out)
}
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/NTUcourse/index", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
pttTestFunction <- function(URL, filename)
{
URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
allText
#out <- file(filename, "w", encoding="BIG-5")
write.table(allText, filename)
#close(out)
}
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/NTUcourse/index", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
id<- c(1984:1993)
filename<- paste0(id-1984, ".txt")
URL<- paste0("https://www.ptt.cc/bbs/NTUcourse/index", id, ".html")
url_function<- function(URL, filename){
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
sapply(id, url_function)
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
write.table(allText, filename)
}
mapply(url_function, URL= URL, filename= filename)
id<- c(1983:1992)
rm(list=ls(all.names = TRUE))
library(rvest)
id<- c(1983:1992)
filename<- paste0(id-1983, ".txt")
URL<- paste0("https://www.ptt.cc/bbs/NTUcourse/index", id, ".html")
url_function<- function(URL, filename){
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
sapply(id, url_function)
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
write.table(allText, filename)
}
mapply(url_function, URL= URL, filename= filename)
url_function<- function(URL, filename){
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
sapply(id, url_function)
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
write.table(allText, filename)
}
url_function(URL[1], filename[1])
URL<-  "https://www.ptt.cc/bbs/NTUcourse/index"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
sapply(id, url_function)
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
URL<-  "https://www.ptt.cc/bbs/NTUcourse/index"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
URL<-  "https://www.ptt.cc/bbs/NTUcourse/index"
html  = read_html(URL)
title = html_nodes(html, "a")
c
c
library(tmcn)
rm(list=ls(all.names = TRUE))
library(rvest)
URL<-  "https://www.ptt.cc/bbs/NTUcourse/index"
html  = read_html(URL)
title = html_nodes(html, "a")
install.package("devtools")
install.packages("devtools")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
library(e1071)
data(iris)
dat = data.frame(iris[, 1:4], y = as.factor(rep(c(-1, 1), c(length(iris[, 1])/2, length(iris[, 1])/2)))
svmfit = svm(y ~ ., data = dat,
kernel = "linear",
cost = 10, scale = FALSE)
print(svmfit)
plot(svmfit, dat)
library(e1071)
data(iris)
dat = data.frame(iris[, 1:4], y = as.factor(rep(c(-1, 1), c(length(iris[, 1])/2, length(iris[, 1])/2)))
svmfit = svm(y ~ ., data = dat,
kernel = "linear",
cost = 10, scale = FALSE)
print(svmfit)
plot(svmfit, dat)
setwd("D:/github/2017_data_course/example/MLDM")
library(NLP)
library(tm)
library(tmcn)
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.7.0_79/")
library(rJava)
library(SnowballC)
library(slam)
library(Matrix)
# import data
source("readFromTXT.R")
# corpus to tdm
d.corpus <- Corpus(VectorSource(seg))
tdm <- TermDocumentMatrix(d.corpus,
control = list(wordLengths = c(2, Inf)))
View(inspect(tdm[1:9, 1:10]))
ass = findAssocs(tdm, "?葦", 0.75)
# tf-idf computation
N = tdm$ncol
# 2嚗宏?????(瘥活閮?銝 colume -> 璈怎宏)
tf <- apply(tdm, 2, sum)
#tf???10???
idfCal <- function(word_doc)
{
log2( N / nnzero(word_doc) )
}
idf <- apply(tdm, 1, idfCal)
doc.tfidf <- as.matrix(tdm)
for(x in 1:nrow(tdm))
{
for(y in 1:ncol(tdm))
{
doc.tfidf[x,y] <- (doc.tfidf[x,y] / tf[y]) * idf[x]
}
}
# ?隞亦 findFreqTerms
# ????????辣鋆∪? 200 甈∩誑銝??摮?鈭?
result = findFreqTerms(tdm, 200)
# ?? tf-idf 蝯梯???
library(plotly)
#which:雿蔭
topID = lapply(rownames(as.data.frame(ass)), function(x)
which(rownames(tdm) == x))
topID = unlist(topID)
plot_ly(data = as.data.frame(doc.tfidf),
x = as.numeric(colnames(doc.tfidf)),
y = doc.tfidf[topID[10],],
name = rownames(doc.tfidf)[topID[10]],
type = "scatter", mode= "box") %>%
add_trace(y = doc.tfidf[topID[2],],
name = rownames(doc.tfidf)[topID[2]])
# get short doc matrix
nonzero = (doc.tfidf != rep(0,10))
nonzeroid = which(row_sums(nonzero) != 0)
q <- rownames(doc.tfidf[nonzeroid,])
all.term <- rownames(doc.tfidf)
loc <- which(all.term %in% q)
s.tdm <- doc.tfidf[loc,]
View(s.tdm)
# result : cos similarity ranking
cos.sim <- function(x, y)
{
(as.vector(x) %*% as.vector(y)) / (norm(as.matrix(x)) * norm(y))
}
doc.cos <- cos.sim(x=as.matrix(s.tdm[,1]),
y=as.matrix(s.tdm[,2]))
doc.cos <- apply(s.tdm[,2:10],2,  cos.sim,
y=as.matrix(s.tdm[,1]))
orderDoc <- doc.cos[order(doc.cos, decreasing = TRUE)]
plot_ly(data = as.data.frame(orderDoc),
x = rownames(as.data.frame(orderDoc)),
y = orderDoc,
name = rownames(doc.tfidf)[topID[10]],
type = "bar", mode= "box")
# Kmeans ??黎
library(stats)
kmeansOut <- kmeans(doc.tfidf, 10, nstart = 20)
